[tasks.win-installer]
env = {WIN_INSTALLER_PATH="${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/wix/${CARGO_MAKE_CRATE_FS_NAME}-${CARGO_MAKE_CRATE_VERSION}-${CARGO_MAKE_RUST_TARGET_ARCH}.msi"}
command = "cargo"
args = ["wix" , "-p", "wooting-analog-sdk", "--nocapture", "--output", "${WIN_INSTALLER_PATH}"]

[tasks.sign-win-installer]
env = {CODESIGN_SCRIPT_PATH="${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/ci/codesign.ps1"}
# condition = {env_true = ["CARGO_MAKE_CI"]}
dependencies = ["win-installer"]
script_runner = "bash"
# bash ../ci/codesign.sh
script = [
'''
powershell $CODESIGN_SCRIPT_PATH $WIN_INSTALLER_PATH
'''
]

[tasks.build-deb]
command = "cargo"
args = ["deb", "--no-build", "${@}"]

[tasks.clean]
dependencies = ["clean-test-c-plugin"]

[tasks.clean-test-c-plugin]
script_runner = "@shell"
script = [
'''
rm -rf test_c_plugin/build
'''
]

[tasks.pre-test]
dependencies = ["build-full-deps"]

[tasks.pre-build]
dependencies = ["build-full-deps"]

[tasks.build-full-deps]
script_runner = "@shell"
script = [
'''
cargo build --manifest-path "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/wooting-analog-common/Cargo.toml"
cargo build --manifest-path "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/wooting-analog-plugin-dev/Cargo.toml"
'''
]
